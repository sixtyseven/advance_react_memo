{"version":3,"sources":["pages/Definitions.tsx","core-ui/NormalComponent.tsx","pages/PageNormalComponents.tsx","core-ui/MemoComponent.tsx","pages/PageMemoComponents.tsx","core-ui/MemoComponentWithCallback.tsx","pages/PageCallbackFunction.tsx","app-states/initialStates.ts","core-ui/MemoColorBlock.tsx","hooks/use-click-outside.ts","features/NormalHouse.tsx","hooks/use-houses.ts","features/BadContructedHouses.tsx","pages/Problem.tsx","features/MemoHouse.tsx","features/ContructedHouses.tsx","pages/ProblemFixed.tsx","pages/ContactMe.tsx","pages/ProblemFixing.tsx","pages/Home.tsx","common/Nav.tsx","App.tsx","reportWebVitals.js","index.js"],"names":["definitionList","label","link","Definitions","console","log","className","map","item","href","target","rel","NormalComponent","props","name","PageNormalComponent","useState","inputVal1","setInputVal1","type","value","onChange","e","currentTarget","memo","UseMemoComponent","MemoComponent","ComponentWithCallbackProp","callback","onClick","UseCallbackFucntion","callback1","useCallback","callback2","MemoComponentWithCallback","houses","uid","windows","color","initialAppState","pageProblem","pageProblemFixed","cloneDeep","ColorBlock","width","height","onChangeColor","debugName","showColorPicker","setShowColorPicker","ref","createRef","sketchPickerComponent","style","position","top","zIndex","onChangeComplete","hex","useEffect","handleClickOutside","event","current","contains","document","addEventListener","removeEventListener","useMouseDownOutside","backgroundColor","ColorBlockWrapper","updateWindowColor","windowUid","houseUid","onChangeColorCallback","newColor","MemoColorBlock","NormalHouse","house","display","window","marginRight","useHouses","initialHouses","housesState","setHousesAppState","previousHousesState","h","newWindows","w","BadContructedHouses","Problem","p","q","Object","keys","every","propKey","ContructedHouses","MemoHouse","ProblemFixed","IndexPage","action","method","htmlFor","id","required","rows","ProblemFixing","Home","navData","title","blocks","items","Nav","block","linkComponent","startsWith","to","App","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.db15b72b.chunk.js","sourcesContent":["/*\n Definitions: mainly from https://reactjs.org/docs/react-api.html\n*/\n\ninterface IItem {\n  label: string;\n  link: string;\n}\n\nconst definitionList: IItem[] = [\n  {\n    label: \"React.Component\",\n    link: \"https://reactjs.org/docs/react-api.html#reactcomponent\",\n  },\n  {\n    label: \"React.PureComponent\",\n    link: \"https://reactjs.org/docs/react-api.html#reactpurecomponent\",\n  },\n  {\n    label: \"React.memo\",\n    link: \"https://reactjs.org/docs/react-api.html#reactmemo\",\n  },\n  {\n    label: \"useCallback\",\n    link: \"https://reactjs.org/docs/hooks-reference.html#usecallback\",\n  },\n];\n\nfunction Definitions() {\n  console.log(\"[render] Definitions page\");\n  return (\n    <div className=\"page\">\n      <h3>Definitons</h3>\n      <ul>\n        {definitionList.map((item) => {\n          return (\n            <li key={item.label}>\n              <a href={item.link} target=\"_blank\" rel=\"noopener noreferrer\">\n                {item.label}\n              </a>\n            </li>\n          );\n        })}\n      </ul>\n      <p>Definitions are mainly from https://reactjs.org/docs/react-api.html</p>\n    </div>\n  );\n}\n\nexport default Definitions;\n","interface IProps {\n  name: string;\n}\n\nfunction NormalComponent(props: IProps) {\n  const { name } = props;\n  console.log(\"[render] render Component \", name);\n  return (\n    <>\n      <h4> Component</h4>\n      <div>Name: {name} </div>\n    </>\n  );\n}\n\nexport default NormalComponent;\n","/*\nThis page will demo use React Component without React.memo\n*/\nimport { useState, FormEvent } from \"react\";\nimport NormalComponent from \"core-ui/NormalComponent\";\n\nfunction PageNormalComponent() {\n  const [inputVal1, setInputVal1] = useState<string>(\"\");\n  const onChange = (e: FormEvent<HTMLInputElement>) => {\n    setInputVal1(e.currentTarget.value);\n  };\n\n  console.log(\"[render] Page \");\n  return (\n    <div className=\"page\">\n      <h3> Component Without Memo</h3>\n      Input Name and inspect the output from console log:{\" \"}\n      <input type=\"text\" value={inputVal1} onChange={onChange} />\n      <NormalComponent name={inputVal1} />\n      <NormalComponent name=\"static name\" />\n      <br />\n      <p>\n        Or no, \"static name\" has never been updated, but our Robot still renders\n        the component. In this case, we definitely don't need the render.\n      </p>\n    </div>\n  );\n}\n\nexport default PageNormalComponent;\n","import { memo } from \"react\";\nimport NormalComponent from \"./NormalComponent\";\nexport default memo(NormalComponent);\n","/*\nThis page will demo use React Component without React.memo\n*/\nimport { useState, FormEvent } from \"react\";\nimport MemoComponent1 from \"core-ui/MemoComponent\";\n\nfunction UseMemoComponent() {\n  const [inputVal1, setInputVal1] = useState<string>(\"\");\n  const onChange = (e: FormEvent<HTMLInputElement>) => {\n    setInputVal1(e.currentTarget.value);\n  };\n\n  console.log(\"[render] Page MemoComponent\");\n  return (\n    <div className=\"page\">\n      <h3>Memo Component</h3>\n      Input Name and inspect the output from console log:{\" \"}\n      <input type=\"text\" value={inputVal1} onChange={onChange} />\n      <MemoComponent1 name={inputVal1} />\n      <MemoComponent1 name=\"static name\" />\n      <br />\n      <p>\n        All we did was wrap the component with <code>React.memo</code>\n      </p>\n      <p>Or Yes, haha, \"static name\" is not rendered now. Magic!</p>\n      <div>\n        <code>\n          {`import {memo} from \"react\";`} <br />\n          {`import NormalComponent from \"./NormalComponent\";`} <br />\n          {`export default memo(NormalComponent);`} <br />\n        </code>\n      </div>\n    </div>\n  );\n}\n\nexport default UseMemoComponent;\n","/**\n * Pure Component with a callback\n */\nimport { memo } from \"react\";\ninterface IProps {\n  name: string;\n  callback: () => void;\n}\n\nfunction ComponentWithCallbackProp(props: IProps) {\n  const { name, callback } = props;\n  console.log(\"[render] Memo Component With Callback \", name);\n  return (\n    <>\n      <h4>memo Component with callback</h4>\n      <div onClick={callback}>Name: {name} (clickable)</div>\n    </>\n  );\n}\n\nexport default memo(ComponentWithCallbackProp);\n","import { FormEvent, useCallback, useState } from \"react\";\nimport MemoComponentWithCallback from \"core-ui/MemoComponentWithCallback\";\n\nfunction UseCallbackFucntion() {\n  const [inputVal1, setInputVal1] = useState<string>(\"\");\n  const onChange = (e: FormEvent<HTMLInputElement>) => {\n    setInputVal1(e.currentTarget.value);\n  };\n  const callback1 = useCallback(() => {\n    console.log(\"callback1\");\n  }, []);\n  const callback2 = useCallback(() => {\n    console.log(\"callback2\");\n  }, []);\n\n  console.log(\"[render] Page MemoComponent with callback\");\n  return (\n    <div className=\"page\">\n      <h4>Memo Component with callbacks</h4>\n      input Name and inspect the output from console log:{\" \"}\n      <input type=\"text\" value={inputVal1} onChange={onChange} />\n      <MemoComponentWithCallback name={inputVal1} callback={callback1} />\n      <MemoComponentWithCallback name=\"static name\" callback={callback2} />\n      <br />\n      <p>\n        However, sometimes if we add some callback to props, react starts to\n        render not updated peer components again\n      </p>\n      <p>\n        No worries, <code>React.useCallback</code> comes to the rescue.\n      </p>\n      <code>\n        <pre>\n          {`\n  const callback2 = () => {\n    console.log(\"callback2\");\n  };\n<MemoComponentWithCallback name=\"static name\" callback={callback2} />\n       `}\n        </pre>\n      </code>\n      <p>\n        Update\n        <code>callback2</code>\n        function to below:\n      </p>\n      <code>\n        {`\n\n    const callback2 = useCallback(() => {\n      console.log(\"callback2\");\n    }, []);\n       `}\n      </code>\n      <p>\n        Or Yes, \"static name\" is not rendered when we need to render the peer\n        component now.\n      </p>\n      <p>\n        Similarly, we have tools like <code>React.useMemo</code> and{\" \"}\n        <code>reselect</code> for more advanced memo for different scenarios to\n        make react work as expected.\n      </p>\n    </div>\n  );\n}\n\nexport default UseCallbackFucntion;\n","import { cloneDeep } from \"lodash\";\nimport { IHouse, IAppState } from \"models/index\";\n\nconst house1: IHouse = {\n  uid: \"house1\",\n  name: \"house 1\",\n  windows: [\n    {\n      uid: \"house1-window1\",\n      color: \"#ff0000\",\n    },\n    {\n      uid: \"house1-window2\",\n      color: \"#ff00ff\",\n    },\n  ],\n};\n\nconst house2: IHouse = {\n  uid: \"house2\",\n  name: \"house 2\",\n  windows: [\n    {\n      uid: \"house2-window1\",\n      color: \"#d0021b\",\n    },\n    {\n      uid: \"house2-window2\",\n      color: \"#2200ff\",\n    },\n  ],\n};\n\nconst house3: IHouse = {\n  uid: \"house3\",\n  name: \"house 3\",\n  windows: [\n    {\n      uid: \"house3-window1\",\n      color: \"#9013fe\",\n    },\n    {\n      uid: \"house3-window2\",\n      color: \"#f5a623\",\n    },\n  ],\n};\n\nconst house4: IHouse = {\n  uid: \"house4\",\n  name: \"house 4\",\n  windows: [\n    {\n      uid: \"house4-window1\",\n      color: \"#7ed321\",\n    },\n    {\n      uid: \"house4-window2\",\n      color: \"#ddcc00\",\n    },\n    {\n      uid: \"house4-window3\",\n      color: \"#50e3c2\",\n    },\n  ],\n};\nconst house5: IHouse = {\n  uid: \"house5\",\n  name: \"house 5\",\n  windows: [\n    {\n      uid: \"house5-window1\",\n      color: \"#4a90e2\",\n    },\n    {\n      uid: \"house5-window2\",\n      color: \"#417505\",\n    },\n  ],\n};\n\nconst houses = [house1, house2, house3, house4, house5];\nconst houses2 = cloneDeep(houses);\n\nexport const initialAppState: IAppState = {\n  pageProblem: houses,\n  pageProblemFixed: houses2,\n};\n","import { memo, useState, createRef, useCallback } from \"react\";\nimport { SketchPicker, ColorResult } from \"react-color\";\nimport { useMouseDownOutside } from \"hooks/use-click-outside\";\n\ninterface IProps {\n  debugName: string;\n  color: string;\n  width?: number;\n  height?: number;\n  onChangeColor: (newColor: string) => void;\n}\n\nfunction ColorBlock(props: IProps) {\n  const { color, width = 30, height = 30, onChangeColor, debugName } = props;\n  const [showColorPicker, setShowColorPicker] = useState<boolean>(false);\n  const ref = createRef<HTMLDivElement>();\n\n  const onChangeComplete = (color: ColorResult) => {\n    onChangeColor(color.hex);\n  };\n  let sketchPickerComponent = null;\n  if (showColorPicker) {\n    sketchPickerComponent = (\n      <div style={{ position: \"absolute\", top: 35, zIndex: 1 }}>\n        <SketchPicker color={color} onChangeComplete={onChangeComplete} />\n      </div>\n    );\n  }\n\n  const onClick = () => {\n    setShowColorPicker(!showColorPicker);\n  };\n\n  const closeColorPicker = useCallback(() => {\n    setShowColorPicker(false);\n  }, []);\n\n  useMouseDownOutside(ref, closeColorPicker);\n  console.log(\"[render] Memo Color Block \", debugName);\n\n  return (\n    <div ref={ref} style={{ position: \"relative\" }}>\n      <div\n        style={{ backgroundColor: color, width, height }}\n        onClick={onClick}\n      ></div>\n\n      {sketchPickerComponent}\n    </div>\n  );\n}\n\nexport default memo(ColorBlock);\n","import { useEffect, MutableRefObject } from \"react\";\n\nexport function useMouseDownOutside(\n  ref: MutableRefObject<HTMLElement | null>,\n  callback: () => void\n) {\n  useEffect(() => {\n    function handleClickOutside(event: MouseEvent) {\n      if (ref.current && !ref.current.contains(event.target as Node)) {\n        if (callback) {\n          callback();\n        }\n      }\n    }\n\n    // Bind the event listener\n    document.addEventListener(\"mousedown\", handleClickOutside);\n    return () => {\n      // Unbind the event listener on clean up\n      document.removeEventListener(\"mousedown\", handleClickOutside);\n    };\n  }, [ref, callback]);\n}\n","import { IHouse } from \"models\";\nimport ColorBlock from \"core-ui/MemoColorBlock\";\nimport { useCallback, memo } from \"react\";\n\nexport interface IProps {\n  house: IHouse;\n  updateWindowColor: (\n    houseUid: string,\n    windowUid: string,\n    newColor: string\n  ) => void;\n}\n\nexport interface IMemoColorProps {\n  color: string;\n  houseUid: string;\n  updateWindowColor: (\n    houseUid: string,\n    windowUid: string,\n    newColor: string\n  ) => void;\n  windowUid: string;\n  debugName: string;\n}\n\nfunction ColorBlockWrapper(props: IMemoColorProps) {\n  const { color, updateWindowColor, windowUid, houseUid, debugName } = props;\n\n  const onChangeColorCallback = useCallback(\n    (newColor: string) => updateWindowColor(houseUid, windowUid, newColor),\n    [houseUid, windowUid, updateWindowColor]\n  );\n  return (\n    <ColorBlock\n      color={color}\n      onChangeColor={onChangeColorCallback}\n      debugName={debugName}\n    />\n  );\n}\n\nconst MemoColorBlock = memo(ColorBlockWrapper);\n\nfunction NormalHouse(props: IProps) {\n  const { house, updateWindowColor } = props;\n  const { uid: houseUid, name, windows } = house;\n  console.log(\"[render] render House \", name);\n  return (\n    <>\n      <div>House Name: {name} </div>\n      <div>House windows: </div>\n      <div style={{ display: \"flex\" }}>\n        {windows.map((window) => {\n          return (\n            <div key={window.uid} style={{ marginRight: 10 }}>\n              <MemoColorBlock\n                color={window.color}\n                houseUid={houseUid}\n                updateWindowColor={updateWindowColor}\n                debugName={window.uid}\n                windowUid={window.uid}\n              />\n            </div>\n          );\n        })}\n      </div>\n    </>\n  );\n}\n\nexport default NormalHouse;\n","import { useState, useCallback } from \"react\";\nimport { IHouse } from \"models\";\n\nexport function useHouses(initialHouses: IHouse[]) {\n  const [housesState, setHousesAppState] = useState<IHouse[]>(initialHouses);\n\n  const updateWindowColor = (\n    houseUid: string,\n    windowUid: string,\n    newColor: string\n  ) => {\n    // Functional updates\n    // If the new state is computed using the previous state,\n    // you can pass a function to setState.\n    // The function will receive the previous value,\n    // and return an updated value.\n    setHousesAppState((previousHousesState) => {\n      const newHouses = previousHousesState.map((h) => {\n        if (h.uid === houseUid) {\n          const newWindows = h.windows.map((w) => {\n            if (w.uid === windowUid) {\n              return {\n                ...w,\n                color: newColor,\n              };\n            }\n            return w;\n          });\n\n          return {\n            ...h,\n            windows: newWindows,\n          };\n        }\n        return h;\n      });\n      return newHouses;\n    });\n  };\n\n  const updateWindowColorCallback = useCallback(updateWindowColor, [\n    setHousesAppState,\n  ]);\n\n  return {\n    houses: housesState,\n    updateWindowColor: updateWindowColorCallback,\n  };\n}\n","import { initialAppState } from \"app-states/initialStates\";\nimport NormalHouse from \"./NormalHouse\";\nimport { useHouses } from \"hooks/use-houses\";\n\nfunction BadContructedHouses() {\n  const initalHouses = initialAppState.pageProblem;\n  const { houses, updateWindowColor } = useHouses(initalHouses);\n\n  console.log(\"[render] render BadContructedHouses \");\n  return (\n    <>\n      <h3>BadContructedHouses </h3>\n      <p>Update any window color, and inpect the console output</p>\n      {houses.map((house) => {\n        return (\n          <NormalHouse\n            key={house.uid}\n            house={house}\n            updateWindowColor={updateWindowColor}\n          />\n        );\n      })}\n    </>\n  );\n}\n\nexport default BadContructedHouses;\n","import BadContructedHouses from \"features/BadContructedHouses\";\n\nfunction Problem() {\n  return (\n    <div className=\"page\">\n      <h3>Problem</h3>\n      <p>\n        Your boss has 5 houses, which is built and maintained by a robot named\n        \"React\". One day, your boss suprisingly found that, every time he wants\n        to refurnish an house window to give it a new color, \"React\" would\n        refurnish all windows in 5 houses, sometimes even all the Doors (if\n        there are any). Such a waste! Now you are given a task to fix the\n        software installed in the robot to ask him to do things more\n        efficiently.\n      </p>\n      <p>\n        To solve this problem, we may need some understanding about how the\n        robot \"React\" and memo works essentially:\n      </p>\n      <div>\n        <BadContructedHouses />\n      </div>\n    </div>\n  );\n}\n\nexport default Problem;\n","import { memo } from \"react\";\nimport NormalHouse, { IProps } from \"./NormalHouse\";\n\ntype IPropKeys = keyof IProps;\n\nexport default memo(NormalHouse, (p: IProps, q: IProps) => {\n  const isEqual = Object.keys(p).every(\n    (propKey: string) => p[propKey as IPropKeys] === q[propKey as IPropKeys]\n  );\n  return isEqual;\n});\n","import { initialAppState } from \"app-states/initialStates\";\nimport MemoHouse from \"./MemoHouse\";\nimport { useHouses } from \"hooks/use-houses\";\n\nfunction ContructedHouses() {\n  const initalHouses = initialAppState.pageProblemFixed;\n\n  const { houses, updateWindowColor } = useHouses(initalHouses);\n\n  console.log(\"[render] render ContructedHouses \");\n  return (\n    <>\n      <h3>ContructedHouses </h3>\n      <p>Update any window color, and inpect the console output</p>\n      <p>It is glad to see that only the components required are rendered</p>\n      {houses.map((house) => {\n        return (\n          <MemoHouse\n            key={house.uid}\n            house={house}\n            updateWindowColor={updateWindowColor}\n          />\n        );\n      })}\n    </>\n  );\n}\n\nexport default ContructedHouses;\n","import ContructedHouses from \"features/ContructedHouses\";\n\nfunction ProblemFixed() {\n  return (\n    <div className=\"page\">\n      <h3>Problem Fixed</h3>\n      <p>\n        Now Robot \"React\" will only do the work necessary when boss requires it\n        to. No more, no less. Much performant when constructing the houses,\n        results in a faster and more scalable application and happier boss and\n        users.\n      </p>\n\n      <div>\n        <ContructedHouses />\n      </div>\n    </div>\n  );\n}\n\nexport default ProblemFixed;\n","const IndexPage = () => {\n  return (\n    <div>\n      <h3>Contact Me</h3>\n      <br />\n      <div>\n        <form action=\"https://formspree.io/moqqobrb\" method=\"POST\">\n          <div className=\"form-group\">\n            <label htmlFor=\"contact-form-name\">\n              Your Name <span className=\"text-danger\">*</span>\n            </label>\n            <input\n              type=\"text\"\n              name=\"name\"\n              id=\"contact-form-name\"\n              className=\"form-control\"\n              required\n            />\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor=\"contact-form-email\">Your Email Address</label>\n            <input\n              type=\"email\"\n              name=\"email\"\n              id=\"contact-form-email\"\n              className=\"form-control\"\n            />\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor=\"contact-form-message\">\n              Message <span className=\"text-danger\">*</span>\n            </label>\n            <textarea\n              name=\"message\"\n              rows={6}\n              id=\"contact-form-message\"\n              className=\"form-control\"\n              required\n            />\n          </div>\n          <div className=\"form-group\">\n            <button type=\"submit\" className=\"form-control\">\n              Submit\n            </button>\n          </div>\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default IndexPage;\n","function ProblemFixing() {\n  return (\n    <div className=\"page\">\n      <h3>Problem Fixing</h3>\n      <ol>\n        <li>\n          <p>\n            Let's wrap those some more components to be make React PureComponent\n            <br />\n            <br />\n            <code>export default memo(ColorBlock);</code>\n            <br />\n            <code>export default memo(ComponentWithCallbackProp);</code>\n            <br />\n            <br />\n            <code>\n              <pre>\n                {`/**\n * memo also accept a second argument for complext props comparision.\n * Don't forget to take advantage of immutation and shallow comparison\n */`}\n              </pre>\n            </code>\n            <code>\n              {`\n                import { memo } from \"react\"; `}{\" \"}\n              <br />\n              {`\n                import NormalHouse, { IProps } from \"./NormalHouse\";`}\n              <br />\n              {`\n                type IPropKeys = keyof IProps;\n              `}\n              <br />\n              {`\n                export default memo(NormalHouse, (p: IProps, q: IProps) => {  `}\n              <br />\n              {`\n                  const isEqual = Object.keys(p).every(  `}\n              <br />\n              {`\n                    (propKey: string) => p[propKey as IPropKeys] === q[propKey as IPropKeys]  `}\n              <br />\n              {`\n                  );  `}\n              <br />\n              {`\n                  return isEqual;  `}\n              <br />\n              {`\n                });\n                `}\n            </code>\n          </p>\n        </li>\n        <li>\n          <div>\n            Abstract a custom hook <code>useHouses</code>to reuse on different\n            pages\n            <code>\n              <pre>\n                {`\n                import { useState, useCallback } from \"react\";\n                import { IHouse } from \"models\";\n\n                export function useHouses(initialHouses: IHouse[]) {\n                  const [housesState, setHousesAppState] = useState<IHouse[]>(initialHouses);\n\n                  const updateWindowColor = (\n                    houseUid: string,\n                    windowUid: string,\n                    newColor: string\n                  ) => {\n                    // Functional updates\n                    // If the new state is computed using the previous state,\n                    // you can pass a function to setState.\n                    // The function will receive the previous value,\n                    // and return an updated value.\n                    setHousesAppState((previousHousesState) => {\n                      const newHouses = previousHousesState.map((h) => {\n                        if (h.uid === houseUid) {\n                          const newWindows = h.windows.map((w) => {\n                            if (w.uid === windowUid) {\n                              return {\n                                ...w,\n                                color: newColor,\n                              };\n                            }\n                            return w;\n                          });\n\n                          return {\n                            ...h,\n                            windows: newWindows,\n                          };\n                        }\n                        return h;\n                      });\n                      return newHouses;\n                    });\n                  };\n\n                  const updateWindowColorCallback = useCallback(updateWindowColor, [\n                    setHousesAppState,\n                  ]);\n\n                  return {\n                    houses: housesState,\n                    updateWindowColor: updateWindowColorCallback,\n                  };\n                }\n\n                `}\n              </pre>\n            </code>\n          </div>\n        </li>\n        <li>\n          <div>\n            You may need to create some wrapper component to memo array items:\n            <br />\n            eg: memo `ColorBlock` for array items:\n            <code>\n              <pre>\n                {`\n                import { IHouse } from \"models\";\n                import ColorBlock from \"core-ui/MemoColorBlock\";\n                import { useCallback, memo } from \"react\";\n\n                export interface IProps {\n                  house: IHouse;\n                  updateWindowColor: (\n                    houseUid: string,\n                    windowUid: string,\n                    newColor: string\n                  ) => void;\n                }\n\n                export interface IMemoColorProps {\n                  color: string;\n                  houseUid: string;\n                  updateWindowColor: (\n                    houseUid: string,\n                    windowUid: string,\n                    newColor: string\n                  ) => void;\n                  windowUid: string;\n                  debugName: string;\n                }\n\n                function ColorBlockWrapper(props: IMemoColorProps) {\n                  const { color, updateWindowColor, windowUid, houseUid, debugName } = props;\n\n                  const onChangeColorCallback = useCallback(\n                    (newColor: string) => updateWindowColor(houseUid, windowUid, newColor),\n                    [houseUid, windowUid, updateWindowColor]\n                  );\n                  return (\n                    <ColorBlock\n                      color={color}\n                      onChangeColor={onChangeColorCallback}\n                      debugName={debugName}\n                    />\n                  );\n                }\n\n                const MemoColorBlock = memo(ColorBlockWrapper);\n\n                function NormalHouse(props: IProps) {\n                  const { house, updateWindowColor } = props;\n                  const { uid: houseUid, name, windows } = house;\n                  console.log(\"[render] render House \", name);\n                  return (\n                    <>\n                      <div>House Name: {name} </div>\n                      <div>House windows: </div>\n                      <div style={{ display: \"flex\" }}>\n                        {windows.map((window) => {\n                          return (\n                            <div key={window.uid} style={{ marginRight: 10 }}>\n                              <MemoColorBlock\n                                color={window.color}\n                                houseUid={houseUid}\n                                updateWindowColor={updateWindowColor}\n                                debugName={window.uid}\n                                windowUid={window.uid}\n                              />\n                            </div>\n                          );\n                        })}\n                      </div>\n                    </>\n                  );\n                }\n\n                export default NormalHouse;\n                `}\n              </pre>\n            </code>\n          </div>\n        </li>\n        <li>\n          <p>\n            This should be cover most of the cases. Go to \"/problem-fixed\" to\n            see the result.\n            <br /> Feel free to download the source codes and play it on your\n            local.\n            <br /> Feel free to contact me for any doubt.\n          </p>\n        </li>\n      </ol>\n    </div>\n  );\n}\n\nexport default ProblemFixing;\n","export default function Home() {\n  return <div></div>;\n}\n","import { Link } from \"react-router-dom\";\n\nconst navData = {\n  title: `An Advanced React Memo Tutorial`,\n  blocks: [\n    {\n      title: \"Problem\",\n      items: [{ link: \"/problem\", label: \"Promblem\" }],\n    },\n    {\n      title: \"Training Agenda\",\n      items: [\n        { link: \"/definitions\", label: \"Definitions\" },\n        { link: \"/page1\", label: \"Page1: React without memo\" },\n        { link: \"/page2\", label: \"Page2: React memo / PureComponent\" },\n        { link: \"/page3\", label: \"Page3: React memo with callback function\" },\n      ],\n    },\n    {\n      title: \"Fix The Problem\",\n      items: [\n        { link: \"/problem-fixing\", label: \"Address Promblems\" },\n        { link: \"/problem-fixed\", label: \"Promblem Fixed\" },\n      ],\n    },\n    {\n      title: \"Souce code\",\n      items: [\n        {\n          link: \"https://github.com/sixtyseven/advance_react_memo\",\n          label: \"GitHub\",\n        },\n      ],\n    },\n    {\n      title: \"Contact me\",\n      items: [{ link: \"/contact-me\", label: \"Contact me\" }],\n    },\n  ],\n};\n\nexport default function Nav() {\n  return (\n    <nav className=\"nav\">\n      <h3 className=\"h3\">{navData.title}</h3>\n      {navData.blocks.map((block) => {\n        return (\n          <div className=\"nav-block\" key={block.title}>\n            <h4 className=\"h4\">{block.title}</h4>\n            <ul>\n              {block.items.map((item) => {\n                let linkComponent;\n                //external link\n                if (\n                  item.link.startsWith(\"https://\") ||\n                  item.link.startsWith(\"http://\")\n                ) {\n                  linkComponent = (\n                    <a\n                      href={item.link}\n                      target=\"_blank\"\n                      rel=\"noopener noreferrer\"\n                    >\n                      {item.label}\n                    </a>\n                  );\n                } else {\n                  linkComponent = <Link to={item.link}>{item.label}</Link>;\n                }\n\n                return <li key={item.link}>{linkComponent}</li>;\n              })}\n            </ul>\n          </div>\n        );\n      })}\n    </nav>\n  );\n}\n","import { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport \"./App.scss\";\nimport Definitions from \"pages/Definitions\";\nimport UseNormalComponents from \"pages/PageNormalComponents\";\nimport UseMemoComponents from \"pages/PageMemoComponents\";\nimport UseCallbackFunction from \"pages/PageCallbackFunction\";\nimport Problem from \"pages/Problem\";\nimport ProblemFixed from \"pages/ProblemFixed\";\nimport ContaceMe from \"pages/ContactMe\";\nimport ProblemFixing from \"pages/ProblemFixing\";\nimport Home from \"pages/Home\";\nimport Nav from \"common/Nav\";\n\nexport default function App() {\n  console.log(\"[render] App \");\n  return (\n    <Router>\n      <div className=\"app\">\n        <div className=\"left-side\">\n          <Nav />\n        </div>\n        <div className=\"right-side\">\n          <Switch>\n            <Route path=\"/problem\">\n              <Problem />\n            </Route>\n            <Route path=\"/problem-fixed\">\n              <ProblemFixed />\n            </Route>\n            <Route path=\"/problem-fixing\">\n              <ProblemFixing />\n            </Route>\n            <Route path=\"/contact-me\">\n              <ContaceMe />\n            </Route>\n\n            <Route path=\"/definitions\">\n              <Definitions />\n            </Route>\n            <Route path=\"/page1\">\n              <UseNormalComponents />\n            </Route>\n            <Route path=\"/page2\">\n              <UseMemoComponents />\n            </Route>\n            <Route path=\"/page3\">\n              <UseCallbackFunction />\n            </Route>\n            <Route path=\"/\">\n              <Home />\n            </Route>\n          </Switch>\n        </div>\n      </div>\n    </Router>\n  );\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}